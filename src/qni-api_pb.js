/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.qni.api.ConsoleMessage', null, global);
goog.exportSymbol('proto.qni.api.ConsolePrintButtonData', null, global);
goog.exportSymbol('proto.qni.api.ConsolePrintData', null, global);
goog.exportSymbol('proto.qni.api.ConsoleRequest', null, global);
goog.exportSymbol('proto.qni.api.ConsoleResponse', null, global);
goog.exportSymbol('proto.qni.api.ConsoleSettingItem', null, global);
goog.exportSymbol('proto.qni.api.Empty', null, global);
goog.exportSymbol('proto.qni.api.ErrorResponse', null, global);
goog.exportSymbol('proto.qni.api.Font', null, global);
goog.exportSymbol('proto.qni.api.FontStyle', null, global);
goog.exportSymbol('proto.qni.api.InputRequest', null, global);
goog.exportSymbol('proto.qni.api.InputResponse', null, global);
goog.exportSymbol('proto.qni.api.ProgramCommand', null, global);
goog.exportSymbol('proto.qni.api.ProgramCommandArray', null, global);
goog.exportSymbol('proto.qni.api.ProgramMessage', null, global);
goog.exportSymbol('proto.qni.api.ProgramRequest', null, global);
goog.exportSymbol('proto.qni.api.ProgramResponse', null, global);
goog.exportSymbol('proto.qni.api.StringArray', null, global);
goog.exportSymbol('proto.qni.api.TextAlign', null, global);
goog.exportSymbol('proto.qni.api.Timestamp', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qni.api.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.Empty.displayName = 'proto.qni.api.Empty';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.Empty}
 */
proto.qni.api.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.Empty;
  return proto.qni.api.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.Empty}
 */
proto.qni.api.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.Timestamp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qni.api.Timestamp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.Timestamp.displayName = 'proto.qni.api.Timestamp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.Timestamp.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.Timestamp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.Timestamp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.Timestamp.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.Timestamp}
 */
proto.qni.api.Timestamp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.Timestamp;
  return proto.qni.api.Timestamp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.Timestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.Timestamp}
 */
proto.qni.api.Timestamp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.Timestamp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.Timestamp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.Timestamp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.Timestamp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 time = 1;
 * @return {number}
 */
proto.qni.api.Timestamp.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qni.api.Timestamp.prototype.setTime = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.StringArray = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qni.api.StringArray.repeatedFields_, null);
};
goog.inherits(proto.qni.api.StringArray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.StringArray.displayName = 'proto.qni.api.StringArray';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qni.api.StringArray.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.StringArray.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.StringArray.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.StringArray} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.StringArray.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.StringArray}
 */
proto.qni.api.StringArray.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.StringArray;
  return proto.qni.api.StringArray.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.StringArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.StringArray}
 */
proto.qni.api.StringArray.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.StringArray.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.StringArray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.StringArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.StringArray.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string data = 1;
 * @return {!Array<string>}
 */
proto.qni.api.StringArray.prototype.getDataList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.qni.api.StringArray.prototype.setDataList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.qni.api.StringArray.prototype.addData = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.qni.api.StringArray.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ErrorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qni.api.ErrorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ErrorResponse.displayName = 'proto.qni.api.ErrorResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ErrorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ErrorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ErrorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ErrorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reqType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ErrorResponse}
 */
proto.qni.api.ErrorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ErrorResponse;
  return proto.qni.api.ErrorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ErrorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ErrorResponse}
 */
proto.qni.api.ErrorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReqType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ErrorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ErrorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ErrorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ErrorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReqType();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 req_type = 1;
 * @return {number}
 */
proto.qni.api.ErrorResponse.prototype.getReqType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qni.api.ErrorResponse.prototype.setReqType = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.qni.api.ErrorResponse.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qni.api.ErrorResponse.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.InputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.InputRequest.oneofGroups_);
};
goog.inherits(proto.qni.api.InputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.InputRequest.displayName = 'proto.qni.api.InputRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.InputRequest.oneofGroups_ = [[10,11,12,13,20,21,22,30,31,40,41,50,51,52,60]];

/**
 * @enum {number}
 */
proto.qni.api.InputRequest.DataCase = {
  DATA_NOT_SET: 0,
  TOUCH: 10,
  ENTER: 11,
  ANYKEY: 12,
  BOOLEAN: 13,
  STR: 20,
  STR_MAX_LEN: 21,
  STR_SELECT: 22,
  INT: 30,
  INT_MAX_LEN: 31,
  FLOAT: 40,
  FLOAT_MAX_LEN: 41,
  DATE: 50,
  DATETIME: 51,
  TIME: 52,
  COLOR: 60
};

/**
 * @return {proto.qni.api.InputRequest.DataCase}
 */
proto.qni.api.InputRequest.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.InputRequest.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.InputRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.InputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.InputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.InputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.InputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, 0),
    expire: (f = msg.getExpire()) && proto.qni.api.Timestamp.toObject(includeInstance, f),
    touch: (f = msg.getTouch()) && proto.qni.api.Empty.toObject(includeInstance, f),
    enter: (f = msg.getEnter()) && proto.qni.api.Empty.toObject(includeInstance, f),
    anykey: (f = msg.getAnykey()) && proto.qni.api.Empty.toObject(includeInstance, f),
    pb_boolean: (f = msg.getBoolean()) && proto.qni.api.Empty.toObject(includeInstance, f),
    str: (f = msg.getStr()) && proto.qni.api.Empty.toObject(includeInstance, f),
    strMaxLen: jspb.Message.getFieldWithDefault(msg, 21, 0),
    strSelect: (f = msg.getStrSelect()) && proto.qni.api.StringArray.toObject(includeInstance, f),
    pb_int: (f = msg.getInt()) && proto.qni.api.Empty.toObject(includeInstance, f),
    intMaxLen: jspb.Message.getFieldWithDefault(msg, 31, 0),
    pb_float: (f = msg.getFloat()) && proto.qni.api.Empty.toObject(includeInstance, f),
    floatMaxLen: jspb.Message.getFieldWithDefault(msg, 41, 0),
    date: (f = msg.getDate()) && proto.qni.api.Empty.toObject(includeInstance, f),
    datetime: (f = msg.getDatetime()) && proto.qni.api.Empty.toObject(includeInstance, f),
    time: (f = msg.getTime()) && proto.qni.api.Empty.toObject(includeInstance, f),
    color: (f = msg.getColor()) && proto.qni.api.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.InputRequest}
 */
proto.qni.api.InputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.InputRequest;
  return proto.qni.api.InputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.InputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.InputRequest}
 */
proto.qni.api.InputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTag(value);
      break;
    case 2:
      var value = new proto.qni.api.Timestamp;
      reader.readMessage(value,proto.qni.api.Timestamp.deserializeBinaryFromReader);
      msg.setExpire(value);
      break;
    case 10:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setTouch(value);
      break;
    case 11:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setEnter(value);
      break;
    case 12:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setAnykey(value);
      break;
    case 13:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setBoolean(value);
      break;
    case 20:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setStr(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStrMaxLen(value);
      break;
    case 22:
      var value = new proto.qni.api.StringArray;
      reader.readMessage(value,proto.qni.api.StringArray.deserializeBinaryFromReader);
      msg.setStrSelect(value);
      break;
    case 30:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setInt(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIntMaxLen(value);
      break;
    case 40:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setFloat(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFloatMaxLen(value);
      break;
    case 50:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 51:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setDatetime(value);
      break;
    case 52:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 60:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.InputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.InputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.InputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.InputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getExpire();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.qni.api.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTouch();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getEnter();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getAnykey();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getBoolean();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getStr();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = message.getStrSelect();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.qni.api.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getInt();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeUint32(
      31,
      f
    );
  }
  f = message.getFloat();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeUint32(
      41,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getDatetime();
  if (f != null) {
    writer.writeMessage(
      51,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getColor();
  if (f != null) {
    writer.writeMessage(
      60,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 tag = 1;
 * @return {number}
 */
proto.qni.api.InputRequest.prototype.getTag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qni.api.InputRequest.prototype.setTag = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Timestamp expire = 2;
 * @return {?proto.qni.api.Timestamp}
 */
proto.qni.api.InputRequest.prototype.getExpire = function() {
  return /** @type{?proto.qni.api.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Timestamp, 2));
};


/** @param {?proto.qni.api.Timestamp|undefined} value */
proto.qni.api.InputRequest.prototype.setExpire = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.qni.api.InputRequest.prototype.clearExpire = function() {
  this.setExpire(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasExpire = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Empty TOUCH = 10;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getTouch = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 10));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setTouch = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearTouch = function() {
  this.setTouch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasTouch = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Empty ENTER = 11;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getEnter = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 11));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setEnter = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearEnter = function() {
  this.setEnter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasEnter = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Empty ANYKEY = 12;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getAnykey = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 12));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setAnykey = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearAnykey = function() {
  this.setAnykey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasAnykey = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Empty BOOLEAN = 13;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getBoolean = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 13));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setBoolean = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearBoolean = function() {
  this.setBoolean(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasBoolean = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Empty STR = 20;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getStr = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 20));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setStr = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearStr = function() {
  this.setStr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasStr = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 STR_MAX_LEN = 21;
 * @return {number}
 */
proto.qni.api.InputRequest.prototype.getStrMaxLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.qni.api.InputRequest.prototype.setStrMaxLen = function(value) {
  jspb.Message.setOneofField(this, 21, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearStrMaxLen = function() {
  jspb.Message.setOneofField(this, 21, proto.qni.api.InputRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasStrMaxLen = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional StringArray STR_SELECT = 22;
 * @return {?proto.qni.api.StringArray}
 */
proto.qni.api.InputRequest.prototype.getStrSelect = function() {
  return /** @type{?proto.qni.api.StringArray} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.StringArray, 22));
};


/** @param {?proto.qni.api.StringArray|undefined} value */
proto.qni.api.InputRequest.prototype.setStrSelect = function(value) {
  jspb.Message.setOneofWrapperField(this, 22, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearStrSelect = function() {
  this.setStrSelect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasStrSelect = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Empty INT = 30;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getInt = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 30));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setInt = function(value) {
  jspb.Message.setOneofWrapperField(this, 30, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearInt = function() {
  this.setInt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasInt = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional uint32 INT_MAX_LEN = 31;
 * @return {number}
 */
proto.qni.api.InputRequest.prototype.getIntMaxLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.qni.api.InputRequest.prototype.setIntMaxLen = function(value) {
  jspb.Message.setOneofField(this, 31, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearIntMaxLen = function() {
  jspb.Message.setOneofField(this, 31, proto.qni.api.InputRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasIntMaxLen = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional Empty FLOAT = 40;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getFloat = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 40));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setFloat = function(value) {
  jspb.Message.setOneofWrapperField(this, 40, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearFloat = function() {
  this.setFloat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasFloat = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional uint32 FLOAT_MAX_LEN = 41;
 * @return {number}
 */
proto.qni.api.InputRequest.prototype.getFloatMaxLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/** @param {number} value */
proto.qni.api.InputRequest.prototype.setFloatMaxLen = function(value) {
  jspb.Message.setOneofField(this, 41, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearFloatMaxLen = function() {
  jspb.Message.setOneofField(this, 41, proto.qni.api.InputRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasFloatMaxLen = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional Empty DATE = 50;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getDate = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 50));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setDate = function(value) {
  jspb.Message.setOneofWrapperField(this, 50, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasDate = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional Empty DATETIME = 51;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getDatetime = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 51));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setDatetime = function(value) {
  jspb.Message.setOneofWrapperField(this, 51, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearDatetime = function() {
  this.setDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasDatetime = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional Empty TIME = 52;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getTime = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 52));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setTime = function(value) {
  jspb.Message.setOneofWrapperField(this, 52, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasTime = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional Empty COLOR = 60;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputRequest.prototype.getColor = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 60));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputRequest.prototype.setColor = function(value) {
  jspb.Message.setOneofWrapperField(this, 60, proto.qni.api.InputRequest.oneofGroups_[0], value);
};


proto.qni.api.InputRequest.prototype.clearColor = function() {
  this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputRequest.prototype.hasColor = function() {
  return jspb.Message.getField(this, 60) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.InputResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.InputResponse.oneofGroups_);
};
goog.inherits(proto.qni.api.InputResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.InputResponse.displayName = 'proto.qni.api.InputResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.InputResponse.oneofGroups_ = [[10,20,21,22,23,30,31,32,40]];

/**
 * @enum {number}
 */
proto.qni.api.InputResponse.DataCase = {
  DATA_NOT_SET: 0,
  EMPTY: 10,
  BOOLEAN: 20,
  STR: 21,
  INT: 22,
  FLOAT: 23,
  DATE: 30,
  DATETIME: 31,
  TIME: 32,
  COLOR: 40
};

/**
 * @return {proto.qni.api.InputResponse.DataCase}
 */
proto.qni.api.InputResponse.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.InputResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.InputResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.InputResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.InputResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.InputResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.InputResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, 0),
    empty: (f = msg.getEmpty()) && proto.qni.api.Empty.toObject(includeInstance, f),
    pb_boolean: jspb.Message.getFieldWithDefault(msg, 20, false),
    str: jspb.Message.getFieldWithDefault(msg, 21, ""),
    pb_int: jspb.Message.getFieldWithDefault(msg, 22, 0),
    pb_float: +jspb.Message.getFieldWithDefault(msg, 23, 0.0),
    date: (f = msg.getDate()) && proto.qni.api.Timestamp.toObject(includeInstance, f),
    datetime: (f = msg.getDatetime()) && proto.qni.api.Timestamp.toObject(includeInstance, f),
    time: (f = msg.getTime()) && proto.qni.api.Timestamp.toObject(includeInstance, f),
    color: jspb.Message.getFieldWithDefault(msg, 40, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.InputResponse}
 */
proto.qni.api.InputResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.InputResponse;
  return proto.qni.api.InputResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.InputResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.InputResponse}
 */
proto.qni.api.InputResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTag(value);
      break;
    case 10:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setEmpty(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolean(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInt(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloat(value);
      break;
    case 30:
      var value = new proto.qni.api.Timestamp;
      reader.readMessage(value,proto.qni.api.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 31:
      var value = new proto.qni.api.Timestamp;
      reader.readMessage(value,proto.qni.api.Timestamp.deserializeBinaryFromReader);
      msg.setDatetime(value);
      break;
    case 32:
      var value = new proto.qni.api.Timestamp;
      reader.readMessage(value,proto.qni.api.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.InputResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.InputResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.InputResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.InputResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getEmpty();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeFloat(
      23,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.qni.api.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDatetime();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.qni.api.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.qni.api.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeUint32(
      40,
      f
    );
  }
};


/**
 * optional uint32 tag = 1;
 * @return {number}
 */
proto.qni.api.InputResponse.prototype.getTag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.qni.api.InputResponse.prototype.setTag = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Empty EMPTY = 10;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.InputResponse.prototype.getEmpty = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 10));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.InputResponse.prototype.setEmpty = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearEmpty = function() {
  this.setEmpty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasEmpty = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool BOOLEAN = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.qni.api.InputResponse.prototype.getBoolean = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.qni.api.InputResponse.prototype.setBoolean = function(value) {
  jspb.Message.setOneofField(this, 20, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearBoolean = function() {
  jspb.Message.setOneofField(this, 20, proto.qni.api.InputResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasBoolean = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string STR = 21;
 * @return {string}
 */
proto.qni.api.InputResponse.prototype.getStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.qni.api.InputResponse.prototype.setStr = function(value) {
  jspb.Message.setOneofField(this, 21, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearStr = function() {
  jspb.Message.setOneofField(this, 21, proto.qni.api.InputResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasStr = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional int32 INT = 22;
 * @return {number}
 */
proto.qni.api.InputResponse.prototype.getInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.qni.api.InputResponse.prototype.setInt = function(value) {
  jspb.Message.setOneofField(this, 22, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearInt = function() {
  jspb.Message.setOneofField(this, 22, proto.qni.api.InputResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasInt = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional float FLOAT = 23;
 * @return {number}
 */
proto.qni.api.InputResponse.prototype.getFloat = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 23, 0.0));
};


/** @param {number} value */
proto.qni.api.InputResponse.prototype.setFloat = function(value) {
  jspb.Message.setOneofField(this, 23, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearFloat = function() {
  jspb.Message.setOneofField(this, 23, proto.qni.api.InputResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasFloat = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Timestamp DATE = 30;
 * @return {?proto.qni.api.Timestamp}
 */
proto.qni.api.InputResponse.prototype.getDate = function() {
  return /** @type{?proto.qni.api.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Timestamp, 30));
};


/** @param {?proto.qni.api.Timestamp|undefined} value */
proto.qni.api.InputResponse.prototype.setDate = function(value) {
  jspb.Message.setOneofWrapperField(this, 30, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasDate = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Timestamp DATETIME = 31;
 * @return {?proto.qni.api.Timestamp}
 */
proto.qni.api.InputResponse.prototype.getDatetime = function() {
  return /** @type{?proto.qni.api.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Timestamp, 31));
};


/** @param {?proto.qni.api.Timestamp|undefined} value */
proto.qni.api.InputResponse.prototype.setDatetime = function(value) {
  jspb.Message.setOneofWrapperField(this, 31, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearDatetime = function() {
  this.setDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasDatetime = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional Timestamp TIME = 32;
 * @return {?proto.qni.api.Timestamp}
 */
proto.qni.api.InputResponse.prototype.getTime = function() {
  return /** @type{?proto.qni.api.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Timestamp, 32));
};


/** @param {?proto.qni.api.Timestamp|undefined} value */
proto.qni.api.InputResponse.prototype.setTime = function(value) {
  jspb.Message.setOneofWrapperField(this, 32, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasTime = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 COLOR = 40;
 * @return {number}
 */
proto.qni.api.InputResponse.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/** @param {number} value */
proto.qni.api.InputResponse.prototype.setColor = function(value) {
  jspb.Message.setOneofField(this, 40, proto.qni.api.InputResponse.oneofGroups_[0], value);
};


proto.qni.api.InputResponse.prototype.clearColor = function() {
  jspb.Message.setOneofField(this, 40, proto.qni.api.InputResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.InputResponse.prototype.hasColor = function() {
  return jspb.Message.getField(this, 40) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ConsolePrintButtonData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qni.api.ConsolePrintButtonData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ConsolePrintButtonData.displayName = 'proto.qni.api.ConsolePrintButtonData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ConsolePrintButtonData.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ConsolePrintButtonData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ConsolePrintButtonData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsolePrintButtonData.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto.qni.api.InputResponse.toObject(includeInstance, f),
    text: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ConsolePrintButtonData}
 */
proto.qni.api.ConsolePrintButtonData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ConsolePrintButtonData;
  return proto.qni.api.ConsolePrintButtonData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ConsolePrintButtonData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ConsolePrintButtonData}
 */
proto.qni.api.ConsolePrintButtonData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qni.api.InputResponse;
      reader.readMessage(value,proto.qni.api.InputResponse.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ConsolePrintButtonData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ConsolePrintButtonData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ConsolePrintButtonData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsolePrintButtonData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.qni.api.InputResponse.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional InputResponse value = 1;
 * @return {?proto.qni.api.InputResponse}
 */
proto.qni.api.ConsolePrintButtonData.prototype.getValue = function() {
  return /** @type{?proto.qni.api.InputResponse} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.InputResponse, 1));
};


/** @param {?proto.qni.api.InputResponse|undefined} value */
proto.qni.api.ConsolePrintButtonData.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.qni.api.ConsolePrintButtonData.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsolePrintButtonData.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string text = 2;
 * @return {string}
 */
proto.qni.api.ConsolePrintButtonData.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.qni.api.ConsolePrintButtonData.prototype.setText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ConsolePrintData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ConsolePrintData.oneofGroups_);
};
goog.inherits(proto.qni.api.ConsolePrintData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ConsolePrintData.displayName = 'proto.qni.api.ConsolePrintData';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ConsolePrintData.oneofGroups_ = [[10,11,12,20,30,31]];

/**
 * @enum {number}
 */
proto.qni.api.ConsolePrintData.DataCase = {
  DATA_NOT_SET: 0,
  PRINT: 10,
  PRINT_LINE: 11,
  PRINT_BUTTON: 12,
  NEW_LINE: 20,
  DELETE_LINE: 30,
  CLEAR_LINE: 31
};

/**
 * @return {proto.qni.api.ConsolePrintData.DataCase}
 */
proto.qni.api.ConsolePrintData.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ConsolePrintData.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ConsolePrintData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ConsolePrintData.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ConsolePrintData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ConsolePrintData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsolePrintData.toObject = function(includeInstance, msg) {
  var f, obj = {
    print: jspb.Message.getFieldWithDefault(msg, 10, ""),
    printLine: jspb.Message.getFieldWithDefault(msg, 11, ""),
    printButton: (f = msg.getPrintButton()) && proto.qni.api.ConsolePrintButtonData.toObject(includeInstance, f),
    newLine: (f = msg.getNewLine()) && proto.qni.api.Empty.toObject(includeInstance, f),
    deleteLine: jspb.Message.getFieldWithDefault(msg, 30, 0),
    clearLine: (f = msg.getClearLine()) && proto.qni.api.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ConsolePrintData}
 */
proto.qni.api.ConsolePrintData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ConsolePrintData;
  return proto.qni.api.ConsolePrintData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ConsolePrintData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ConsolePrintData}
 */
proto.qni.api.ConsolePrintData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrint(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintLine(value);
      break;
    case 12:
      var value = new proto.qni.api.ConsolePrintButtonData;
      reader.readMessage(value,proto.qni.api.ConsolePrintButtonData.deserializeBinaryFromReader);
      msg.setPrintButton(value);
      break;
    case 20:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setNewLine(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeleteLine(value);
      break;
    case 31:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setClearLine(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ConsolePrintData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ConsolePrintData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ConsolePrintData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsolePrintData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPrintButton();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.qni.api.ConsolePrintButtonData.serializeBinaryToWriter
    );
  }
  f = message.getNewLine();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint32(
      30,
      f
    );
  }
  f = message.getClearLine();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string PRINT = 10;
 * @return {string}
 */
proto.qni.api.ConsolePrintData.prototype.getPrint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.qni.api.ConsolePrintData.prototype.setPrint = function(value) {
  jspb.Message.setOneofField(this, 10, proto.qni.api.ConsolePrintData.oneofGroups_[0], value);
};


proto.qni.api.ConsolePrintData.prototype.clearPrint = function() {
  jspb.Message.setOneofField(this, 10, proto.qni.api.ConsolePrintData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsolePrintData.prototype.hasPrint = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string PRINT_LINE = 11;
 * @return {string}
 */
proto.qni.api.ConsolePrintData.prototype.getPrintLine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.qni.api.ConsolePrintData.prototype.setPrintLine = function(value) {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ConsolePrintData.oneofGroups_[0], value);
};


proto.qni.api.ConsolePrintData.prototype.clearPrintLine = function() {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ConsolePrintData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsolePrintData.prototype.hasPrintLine = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ConsolePrintButtonData PRINT_BUTTON = 12;
 * @return {?proto.qni.api.ConsolePrintButtonData}
 */
proto.qni.api.ConsolePrintData.prototype.getPrintButton = function() {
  return /** @type{?proto.qni.api.ConsolePrintButtonData} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ConsolePrintButtonData, 12));
};


/** @param {?proto.qni.api.ConsolePrintButtonData|undefined} value */
proto.qni.api.ConsolePrintData.prototype.setPrintButton = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.qni.api.ConsolePrintData.oneofGroups_[0], value);
};


proto.qni.api.ConsolePrintData.prototype.clearPrintButton = function() {
  this.setPrintButton(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsolePrintData.prototype.hasPrintButton = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Empty NEW_LINE = 20;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.ConsolePrintData.prototype.getNewLine = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 20));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.ConsolePrintData.prototype.setNewLine = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.qni.api.ConsolePrintData.oneofGroups_[0], value);
};


proto.qni.api.ConsolePrintData.prototype.clearNewLine = function() {
  this.setNewLine(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsolePrintData.prototype.hasNewLine = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 DELETE_LINE = 30;
 * @return {number}
 */
proto.qni.api.ConsolePrintData.prototype.getDeleteLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.qni.api.ConsolePrintData.prototype.setDeleteLine = function(value) {
  jspb.Message.setOneofField(this, 30, proto.qni.api.ConsolePrintData.oneofGroups_[0], value);
};


proto.qni.api.ConsolePrintData.prototype.clearDeleteLine = function() {
  jspb.Message.setOneofField(this, 30, proto.qni.api.ConsolePrintData.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsolePrintData.prototype.hasDeleteLine = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Empty CLEAR_LINE = 31;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.ConsolePrintData.prototype.getClearLine = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 31));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.ConsolePrintData.prototype.setClearLine = function(value) {
  jspb.Message.setOneofWrapperField(this, 31, proto.qni.api.ConsolePrintData.oneofGroups_[0], value);
};


proto.qni.api.ConsolePrintData.prototype.clearClearLine = function() {
  this.setClearLine(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsolePrintData.prototype.hasClearLine = function() {
  return jspb.Message.getField(this, 31) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.Font = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.qni.api.Font, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.Font.displayName = 'proto.qni.api.Font';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.Font.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.Font.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.Font} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.Font.toObject = function(includeInstance, msg) {
  var f, obj = {
    fontFamily: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fontSize: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    fontStyle: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.Font}
 */
proto.qni.api.Font.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.Font;
  return proto.qni.api.Font.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.Font} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.Font}
 */
proto.qni.api.Font.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFontFamily(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFontSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFontStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.Font.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.Font.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.Font} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.Font.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFontFamily();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFontSize();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getFontStyle();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string font_family = 1;
 * @return {string}
 */
proto.qni.api.Font.prototype.getFontFamily = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.qni.api.Font.prototype.setFontFamily = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float font_size = 2;
 * @return {number}
 */
proto.qni.api.Font.prototype.getFontSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.qni.api.Font.prototype.setFontSize = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint32 font_style = 3;
 * @return {number}
 */
proto.qni.api.Font.prototype.getFontStyle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.qni.api.Font.prototype.setFontStyle = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ConsoleSettingItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ConsoleSettingItem.oneofGroups_);
};
goog.inherits(proto.qni.api.ConsoleSettingItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ConsoleSettingItem.displayName = 'proto.qni.api.ConsoleSettingItem';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ConsoleSettingItem.oneofGroups_ = [[10,11,12,20,21]];

/**
 * @enum {number}
 */
proto.qni.api.ConsoleSettingItem.DataCase = {
  DATA_NOT_SET: 0,
  TEXT_COLOR: 10,
  BACK_COLOR: 11,
  HIGHLIGHT_COLOR: 12,
  FONT: 20,
  TEXT_ALIGN: 21
};

/**
 * @return {proto.qni.api.ConsoleSettingItem.DataCase}
 */
proto.qni.api.ConsoleSettingItem.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ConsoleSettingItem.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ConsoleSettingItem.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ConsoleSettingItem.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ConsoleSettingItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ConsoleSettingItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleSettingItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    textColor: jspb.Message.getFieldWithDefault(msg, 10, 0),
    backColor: jspb.Message.getFieldWithDefault(msg, 11, 0),
    highlightColor: jspb.Message.getFieldWithDefault(msg, 12, 0),
    font: (f = msg.getFont()) && proto.qni.api.Font.toObject(includeInstance, f),
    textAlign: jspb.Message.getFieldWithDefault(msg, 21, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ConsoleSettingItem}
 */
proto.qni.api.ConsoleSettingItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ConsoleSettingItem;
  return proto.qni.api.ConsoleSettingItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ConsoleSettingItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ConsoleSettingItem}
 */
proto.qni.api.ConsoleSettingItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTextColor(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBackColor(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHighlightColor(value);
      break;
    case 20:
      var value = new proto.qni.api.Font;
      reader.readMessage(value,proto.qni.api.Font.deserializeBinaryFromReader);
      msg.setFont(value);
      break;
    case 21:
      var value = /** @type {!proto.qni.api.TextAlign} */ (reader.readEnum());
      msg.setTextAlign(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ConsoleSettingItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ConsoleSettingItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ConsoleSettingItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleSettingItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getFont();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.qni.api.Font.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.qni.api.TextAlign} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeEnum(
      21,
      f
    );
  }
};


/**
 * optional uint32 TEXT_COLOR = 10;
 * @return {number}
 */
proto.qni.api.ConsoleSettingItem.prototype.getTextColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.qni.api.ConsoleSettingItem.prototype.setTextColor = function(value) {
  jspb.Message.setOneofField(this, 10, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], value);
};


proto.qni.api.ConsoleSettingItem.prototype.clearTextColor = function() {
  jspb.Message.setOneofField(this, 10, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleSettingItem.prototype.hasTextColor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 BACK_COLOR = 11;
 * @return {number}
 */
proto.qni.api.ConsoleSettingItem.prototype.getBackColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.qni.api.ConsoleSettingItem.prototype.setBackColor = function(value) {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], value);
};


proto.qni.api.ConsoleSettingItem.prototype.clearBackColor = function() {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleSettingItem.prototype.hasBackColor = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 HIGHLIGHT_COLOR = 12;
 * @return {number}
 */
proto.qni.api.ConsoleSettingItem.prototype.getHighlightColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.qni.api.ConsoleSettingItem.prototype.setHighlightColor = function(value) {
  jspb.Message.setOneofField(this, 12, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], value);
};


proto.qni.api.ConsoleSettingItem.prototype.clearHighlightColor = function() {
  jspb.Message.setOneofField(this, 12, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleSettingItem.prototype.hasHighlightColor = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Font FONT = 20;
 * @return {?proto.qni.api.Font}
 */
proto.qni.api.ConsoleSettingItem.prototype.getFont = function() {
  return /** @type{?proto.qni.api.Font} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Font, 20));
};


/** @param {?proto.qni.api.Font|undefined} value */
proto.qni.api.ConsoleSettingItem.prototype.setFont = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], value);
};


proto.qni.api.ConsoleSettingItem.prototype.clearFont = function() {
  this.setFont(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleSettingItem.prototype.hasFont = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional TextAlign TEXT_ALIGN = 21;
 * @return {!proto.qni.api.TextAlign}
 */
proto.qni.api.ConsoleSettingItem.prototype.getTextAlign = function() {
  return /** @type {!proto.qni.api.TextAlign} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {!proto.qni.api.TextAlign} value */
proto.qni.api.ConsoleSettingItem.prototype.setTextAlign = function(value) {
  jspb.Message.setOneofField(this, 21, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], value);
};


proto.qni.api.ConsoleSettingItem.prototype.clearTextAlign = function() {
  jspb.Message.setOneofField(this, 21, proto.qni.api.ConsoleSettingItem.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleSettingItem.prototype.hasTextAlign = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ConsoleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ConsoleRequest.oneofGroups_);
};
goog.inherits(proto.qni.api.ConsoleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ConsoleRequest.displayName = 'proto.qni.api.ConsoleRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ConsoleRequest.oneofGroups_ = [[10,11,12,13,20]];

/**
 * @enum {number}
 */
proto.qni.api.ConsoleRequest.DataCase = {
  DATA_NOT_SET: 0,
  LOAD_STATE: 10,
  SHARE_STATE: 11,
  SHARE_STATE_OVERWRITE: 12,
  DELETE_STATE: 13,
  GET_STATE: 20
};

/**
 * @return {proto.qni.api.ConsoleRequest.DataCase}
 */
proto.qni.api.ConsoleRequest.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ConsoleRequest.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ConsoleRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ConsoleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ConsoleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ConsoleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    loadState: jspb.Message.getFieldWithDefault(msg, 10, ""),
    shareState: jspb.Message.getFieldWithDefault(msg, 11, ""),
    shareStateOverwrite: jspb.Message.getFieldWithDefault(msg, 12, ""),
    deleteState: jspb.Message.getFieldWithDefault(msg, 13, ""),
    getState: jspb.Message.getFieldWithDefault(msg, 20, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ConsoleRequest}
 */
proto.qni.api.ConsoleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ConsoleRequest;
  return proto.qni.api.ConsoleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ConsoleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ConsoleRequest}
 */
proto.qni.api.ConsoleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoadState(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setShareState(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setShareStateOverwrite(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeleteState(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGetState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ConsoleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ConsoleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ConsoleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint64(
      20,
      f
    );
  }
};


/**
 * optional string LOAD_STATE = 10;
 * @return {string}
 */
proto.qni.api.ConsoleRequest.prototype.getLoadState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.qni.api.ConsoleRequest.prototype.setLoadState = function(value) {
  jspb.Message.setOneofField(this, 10, proto.qni.api.ConsoleRequest.oneofGroups_[0], value);
};


proto.qni.api.ConsoleRequest.prototype.clearLoadState = function() {
  jspb.Message.setOneofField(this, 10, proto.qni.api.ConsoleRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleRequest.prototype.hasLoadState = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string SHARE_STATE = 11;
 * @return {string}
 */
proto.qni.api.ConsoleRequest.prototype.getShareState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.qni.api.ConsoleRequest.prototype.setShareState = function(value) {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ConsoleRequest.oneofGroups_[0], value);
};


proto.qni.api.ConsoleRequest.prototype.clearShareState = function() {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ConsoleRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleRequest.prototype.hasShareState = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SHARE_STATE_OVERWRITE = 12;
 * @return {string}
 */
proto.qni.api.ConsoleRequest.prototype.getShareStateOverwrite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.qni.api.ConsoleRequest.prototype.setShareStateOverwrite = function(value) {
  jspb.Message.setOneofField(this, 12, proto.qni.api.ConsoleRequest.oneofGroups_[0], value);
};


proto.qni.api.ConsoleRequest.prototype.clearShareStateOverwrite = function() {
  jspb.Message.setOneofField(this, 12, proto.qni.api.ConsoleRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleRequest.prototype.hasShareStateOverwrite = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string DELETE_STATE = 13;
 * @return {string}
 */
proto.qni.api.ConsoleRequest.prototype.getDeleteState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.qni.api.ConsoleRequest.prototype.setDeleteState = function(value) {
  jspb.Message.setOneofField(this, 13, proto.qni.api.ConsoleRequest.oneofGroups_[0], value);
};


proto.qni.api.ConsoleRequest.prototype.clearDeleteState = function() {
  jspb.Message.setOneofField(this, 13, proto.qni.api.ConsoleRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleRequest.prototype.hasDeleteState = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 GET_STATE = 20;
 * @return {number}
 */
proto.qni.api.ConsoleRequest.prototype.getGetState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.qni.api.ConsoleRequest.prototype.setGetState = function(value) {
  jspb.Message.setOneofField(this, 20, proto.qni.api.ConsoleRequest.oneofGroups_[0], value);
};


proto.qni.api.ConsoleRequest.prototype.clearGetState = function() {
  jspb.Message.setOneofField(this, 20, proto.qni.api.ConsoleRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleRequest.prototype.hasGetState = function() {
  return jspb.Message.getField(this, 20) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ConsoleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ConsoleResponse.oneofGroups_);
};
goog.inherits(proto.qni.api.ConsoleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ConsoleResponse.displayName = 'proto.qni.api.ConsoleResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ConsoleResponse.oneofGroups_ = [[10,11,255]];

/**
 * @enum {number}
 */
proto.qni.api.ConsoleResponse.DataCase = {
  DATA_NOT_SET: 0,
  OK_INPUT: 10,
  OK_ACCEPT_INPUT: 11,
  ERR: 255
};

/**
 * @return {proto.qni.api.ConsoleResponse.DataCase}
 */
proto.qni.api.ConsoleResponse.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ConsoleResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ConsoleResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ConsoleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ConsoleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ConsoleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    okInput: (f = msg.getOkInput()) && proto.qni.api.InputResponse.toObject(includeInstance, f),
    okAcceptInput: (f = msg.getOkAcceptInput()) && proto.qni.api.Empty.toObject(includeInstance, f),
    err: (f = msg.getErr()) && proto.qni.api.ErrorResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ConsoleResponse}
 */
proto.qni.api.ConsoleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ConsoleResponse;
  return proto.qni.api.ConsoleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ConsoleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ConsoleResponse}
 */
proto.qni.api.ConsoleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.qni.api.InputResponse;
      reader.readMessage(value,proto.qni.api.InputResponse.deserializeBinaryFromReader);
      msg.setOkInput(value);
      break;
    case 11:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setOkAcceptInput(value);
      break;
    case 255:
      var value = new proto.qni.api.ErrorResponse;
      reader.readMessage(value,proto.qni.api.ErrorResponse.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ConsoleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ConsoleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ConsoleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOkInput();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.InputResponse.serializeBinaryToWriter
    );
  }
  f = message.getOkAcceptInput();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      255,
      f,
      proto.qni.api.ErrorResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputResponse OK_INPUT = 10;
 * @return {?proto.qni.api.InputResponse}
 */
proto.qni.api.ConsoleResponse.prototype.getOkInput = function() {
  return /** @type{?proto.qni.api.InputResponse} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.InputResponse, 10));
};


/** @param {?proto.qni.api.InputResponse|undefined} value */
proto.qni.api.ConsoleResponse.prototype.setOkInput = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.ConsoleResponse.oneofGroups_[0], value);
};


proto.qni.api.ConsoleResponse.prototype.clearOkInput = function() {
  this.setOkInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleResponse.prototype.hasOkInput = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Empty OK_ACCEPT_INPUT = 11;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.ConsoleResponse.prototype.getOkAcceptInput = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 11));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.ConsoleResponse.prototype.setOkAcceptInput = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.qni.api.ConsoleResponse.oneofGroups_[0], value);
};


proto.qni.api.ConsoleResponse.prototype.clearOkAcceptInput = function() {
  this.setOkAcceptInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleResponse.prototype.hasOkAcceptInput = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ErrorResponse ERR = 255;
 * @return {?proto.qni.api.ErrorResponse}
 */
proto.qni.api.ConsoleResponse.prototype.getErr = function() {
  return /** @type{?proto.qni.api.ErrorResponse} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ErrorResponse, 255));
};


/** @param {?proto.qni.api.ErrorResponse|undefined} value */
proto.qni.api.ConsoleResponse.prototype.setErr = function(value) {
  jspb.Message.setOneofWrapperField(this, 255, proto.qni.api.ConsoleResponse.oneofGroups_[0], value);
};


proto.qni.api.ConsoleResponse.prototype.clearErr = function() {
  this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 255) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ConsoleMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ConsoleMessage.oneofGroups_);
};
goog.inherits(proto.qni.api.ConsoleMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ConsoleMessage.displayName = 'proto.qni.api.ConsoleMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ConsoleMessage.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.qni.api.ConsoleMessage.DataCase = {
  DATA_NOT_SET: 0,
  REQ: 10,
  RES: 11
};

/**
 * @return {proto.qni.api.ConsoleMessage.DataCase}
 */
proto.qni.api.ConsoleMessage.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ConsoleMessage.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ConsoleMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ConsoleMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ConsoleMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ConsoleMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    req: (f = msg.getReq()) && proto.qni.api.ConsoleRequest.toObject(includeInstance, f),
    res: (f = msg.getRes()) && proto.qni.api.ConsoleResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ConsoleMessage}
 */
proto.qni.api.ConsoleMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ConsoleMessage;
  return proto.qni.api.ConsoleMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ConsoleMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ConsoleMessage}
 */
proto.qni.api.ConsoleMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.qni.api.ConsoleRequest;
      reader.readMessage(value,proto.qni.api.ConsoleRequest.deserializeBinaryFromReader);
      msg.setReq(value);
      break;
    case 11:
      var value = new proto.qni.api.ConsoleResponse;
      reader.readMessage(value,proto.qni.api.ConsoleResponse.deserializeBinaryFromReader);
      msg.setRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ConsoleMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ConsoleMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ConsoleMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ConsoleMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReq();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.ConsoleRequest.serializeBinaryToWriter
    );
  }
  f = message.getRes();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.qni.api.ConsoleResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConsoleRequest REQ = 10;
 * @return {?proto.qni.api.ConsoleRequest}
 */
proto.qni.api.ConsoleMessage.prototype.getReq = function() {
  return /** @type{?proto.qni.api.ConsoleRequest} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ConsoleRequest, 10));
};


/** @param {?proto.qni.api.ConsoleRequest|undefined} value */
proto.qni.api.ConsoleMessage.prototype.setReq = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.ConsoleMessage.oneofGroups_[0], value);
};


proto.qni.api.ConsoleMessage.prototype.clearReq = function() {
  this.setReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleMessage.prototype.hasReq = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ConsoleResponse RES = 11;
 * @return {?proto.qni.api.ConsoleResponse}
 */
proto.qni.api.ConsoleMessage.prototype.getRes = function() {
  return /** @type{?proto.qni.api.ConsoleResponse} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ConsoleResponse, 11));
};


/** @param {?proto.qni.api.ConsoleResponse|undefined} value */
proto.qni.api.ConsoleMessage.prototype.setRes = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.qni.api.ConsoleMessage.oneofGroups_[0], value);
};


proto.qni.api.ConsoleMessage.prototype.clearRes = function() {
  this.setRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ConsoleMessage.prototype.hasRes = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ProgramCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ProgramCommand.oneofGroups_);
};
goog.inherits(proto.qni.api.ProgramCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ProgramCommand.displayName = 'proto.qni.api.ProgramCommand';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ProgramCommand.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.qni.api.ProgramCommand.DataCase = {
  DATA_NOT_SET: 0,
  PRINT: 10,
  UPDATE_SETTING: 11
};

/**
 * @return {proto.qni.api.ProgramCommand.DataCase}
 */
proto.qni.api.ProgramCommand.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ProgramCommand.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ProgramCommand.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ProgramCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ProgramCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ProgramCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    print: (f = msg.getPrint()) && proto.qni.api.ConsolePrintData.toObject(includeInstance, f),
    updateSetting: (f = msg.getUpdateSetting()) && proto.qni.api.ConsoleSettingItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ProgramCommand}
 */
proto.qni.api.ProgramCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ProgramCommand;
  return proto.qni.api.ProgramCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ProgramCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ProgramCommand}
 */
proto.qni.api.ProgramCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.qni.api.ConsolePrintData;
      reader.readMessage(value,proto.qni.api.ConsolePrintData.deserializeBinaryFromReader);
      msg.setPrint(value);
      break;
    case 11:
      var value = new proto.qni.api.ConsoleSettingItem;
      reader.readMessage(value,proto.qni.api.ConsoleSettingItem.deserializeBinaryFromReader);
      msg.setUpdateSetting(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ProgramCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ProgramCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ProgramCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrint();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.ConsolePrintData.serializeBinaryToWriter
    );
  }
  f = message.getUpdateSetting();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.qni.api.ConsoleSettingItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional ConsolePrintData PRINT = 10;
 * @return {?proto.qni.api.ConsolePrintData}
 */
proto.qni.api.ProgramCommand.prototype.getPrint = function() {
  return /** @type{?proto.qni.api.ConsolePrintData} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ConsolePrintData, 10));
};


/** @param {?proto.qni.api.ConsolePrintData|undefined} value */
proto.qni.api.ProgramCommand.prototype.setPrint = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.ProgramCommand.oneofGroups_[0], value);
};


proto.qni.api.ProgramCommand.prototype.clearPrint = function() {
  this.setPrint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramCommand.prototype.hasPrint = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ConsoleSettingItem UPDATE_SETTING = 11;
 * @return {?proto.qni.api.ConsoleSettingItem}
 */
proto.qni.api.ProgramCommand.prototype.getUpdateSetting = function() {
  return /** @type{?proto.qni.api.ConsoleSettingItem} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ConsoleSettingItem, 11));
};


/** @param {?proto.qni.api.ConsoleSettingItem|undefined} value */
proto.qni.api.ProgramCommand.prototype.setUpdateSetting = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.qni.api.ProgramCommand.oneofGroups_[0], value);
};


proto.qni.api.ProgramCommand.prototype.clearUpdateSetting = function() {
  this.setUpdateSetting(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramCommand.prototype.hasUpdateSetting = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ProgramCommandArray = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.qni.api.ProgramCommandArray.repeatedFields_, null);
};
goog.inherits(proto.qni.api.ProgramCommandArray, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ProgramCommandArray.displayName = 'proto.qni.api.ProgramCommandArray';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.qni.api.ProgramCommandArray.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ProgramCommandArray.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ProgramCommandArray.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ProgramCommandArray} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramCommandArray.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandsList: jspb.Message.toObjectList(msg.getCommandsList(),
    proto.qni.api.ProgramCommand.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ProgramCommandArray}
 */
proto.qni.api.ProgramCommandArray.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ProgramCommandArray;
  return proto.qni.api.ProgramCommandArray.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ProgramCommandArray} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ProgramCommandArray}
 */
proto.qni.api.ProgramCommandArray.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.qni.api.ProgramCommand;
      reader.readMessage(value,proto.qni.api.ProgramCommand.deserializeBinaryFromReader);
      msg.addCommands(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ProgramCommandArray.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ProgramCommandArray.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ProgramCommandArray} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramCommandArray.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.qni.api.ProgramCommand.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProgramCommand commands = 1;
 * @return {!Array<!proto.qni.api.ProgramCommand>}
 */
proto.qni.api.ProgramCommandArray.prototype.getCommandsList = function() {
  return /** @type{!Array<!proto.qni.api.ProgramCommand>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.qni.api.ProgramCommand, 1));
};


/** @param {!Array<!proto.qni.api.ProgramCommand>} value */
proto.qni.api.ProgramCommandArray.prototype.setCommandsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.qni.api.ProgramCommand=} opt_value
 * @param {number=} opt_index
 * @return {!proto.qni.api.ProgramCommand}
 */
proto.qni.api.ProgramCommandArray.prototype.addCommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.qni.api.ProgramCommand, opt_index);
};


proto.qni.api.ProgramCommandArray.prototype.clearCommandsList = function() {
  this.setCommandsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ProgramRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ProgramRequest.oneofGroups_);
};
goog.inherits(proto.qni.api.ProgramRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ProgramRequest.displayName = 'proto.qni.api.ProgramRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ProgramRequest.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.qni.api.ProgramRequest.DataCase = {
  DATA_NOT_SET: 0,
  INPUT: 10,
  ACCEPT_INPUT: 11
};

/**
 * @return {proto.qni.api.ProgramRequest.DataCase}
 */
proto.qni.api.ProgramRequest.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ProgramRequest.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ProgramRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ProgramRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ProgramRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ProgramRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    input: (f = msg.getInput()) && proto.qni.api.InputRequest.toObject(includeInstance, f),
    acceptInput: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ProgramRequest}
 */
proto.qni.api.ProgramRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ProgramRequest;
  return proto.qni.api.ProgramRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ProgramRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ProgramRequest}
 */
proto.qni.api.ProgramRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.qni.api.InputRequest;
      reader.readMessage(value,proto.qni.api.InputRequest.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAcceptInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ProgramRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ProgramRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ProgramRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.InputRequest.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional InputRequest INPUT = 10;
 * @return {?proto.qni.api.InputRequest}
 */
proto.qni.api.ProgramRequest.prototype.getInput = function() {
  return /** @type{?proto.qni.api.InputRequest} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.InputRequest, 10));
};


/** @param {?proto.qni.api.InputRequest|undefined} value */
proto.qni.api.ProgramRequest.prototype.setInput = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.ProgramRequest.oneofGroups_[0], value);
};


proto.qni.api.ProgramRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 ACCEPT_INPUT = 11;
 * @return {number}
 */
proto.qni.api.ProgramRequest.prototype.getAcceptInput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.qni.api.ProgramRequest.prototype.setAcceptInput = function(value) {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ProgramRequest.oneofGroups_[0], value);
};


proto.qni.api.ProgramRequest.prototype.clearAcceptInput = function() {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ProgramRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramRequest.prototype.hasAcceptInput = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ProgramResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ProgramResponse.oneofGroups_);
};
goog.inherits(proto.qni.api.ProgramResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ProgramResponse.displayName = 'proto.qni.api.ProgramResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ProgramResponse.oneofGroups_ = [[10,11,12,255]];

/**
 * @enum {number}
 */
proto.qni.api.ProgramResponse.DataCase = {
  DATA_NOT_SET: 0,
  OK_LOAD_STATE: 10,
  OK_SHARE_STATE: 11,
  OK_GET_STATE: 12,
  ERR: 255
};

/**
 * @return {proto.qni.api.ProgramResponse.DataCase}
 */
proto.qni.api.ProgramResponse.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ProgramResponse.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ProgramResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ProgramResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ProgramResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ProgramResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    okLoadState: (f = msg.getOkLoadState()) && proto.qni.api.Empty.toObject(includeInstance, f),
    okShareState: jspb.Message.getFieldWithDefault(msg, 11, ""),
    okGetState: (f = msg.getOkGetState()) && proto.qni.api.ProgramCommandArray.toObject(includeInstance, f),
    err: (f = msg.getErr()) && proto.qni.api.ErrorResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ProgramResponse}
 */
proto.qni.api.ProgramResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ProgramResponse;
  return proto.qni.api.ProgramResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ProgramResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ProgramResponse}
 */
proto.qni.api.ProgramResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.qni.api.Empty;
      reader.readMessage(value,proto.qni.api.Empty.deserializeBinaryFromReader);
      msg.setOkLoadState(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOkShareState(value);
      break;
    case 12:
      var value = new proto.qni.api.ProgramCommandArray;
      reader.readMessage(value,proto.qni.api.ProgramCommandArray.deserializeBinaryFromReader);
      msg.setOkGetState(value);
      break;
    case 255:
      var value = new proto.qni.api.ErrorResponse;
      reader.readMessage(value,proto.qni.api.ErrorResponse.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ProgramResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ProgramResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ProgramResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOkLoadState();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.Empty.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getOkGetState();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.qni.api.ProgramCommandArray.serializeBinaryToWriter
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      255,
      f,
      proto.qni.api.ErrorResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional Empty OK_LOAD_STATE = 10;
 * @return {?proto.qni.api.Empty}
 */
proto.qni.api.ProgramResponse.prototype.getOkLoadState = function() {
  return /** @type{?proto.qni.api.Empty} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.Empty, 10));
};


/** @param {?proto.qni.api.Empty|undefined} value */
proto.qni.api.ProgramResponse.prototype.setOkLoadState = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.ProgramResponse.oneofGroups_[0], value);
};


proto.qni.api.ProgramResponse.prototype.clearOkLoadState = function() {
  this.setOkLoadState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramResponse.prototype.hasOkLoadState = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string OK_SHARE_STATE = 11;
 * @return {string}
 */
proto.qni.api.ProgramResponse.prototype.getOkShareState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.qni.api.ProgramResponse.prototype.setOkShareState = function(value) {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ProgramResponse.oneofGroups_[0], value);
};


proto.qni.api.ProgramResponse.prototype.clearOkShareState = function() {
  jspb.Message.setOneofField(this, 11, proto.qni.api.ProgramResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramResponse.prototype.hasOkShareState = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ProgramCommandArray OK_GET_STATE = 12;
 * @return {?proto.qni.api.ProgramCommandArray}
 */
proto.qni.api.ProgramResponse.prototype.getOkGetState = function() {
  return /** @type{?proto.qni.api.ProgramCommandArray} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ProgramCommandArray, 12));
};


/** @param {?proto.qni.api.ProgramCommandArray|undefined} value */
proto.qni.api.ProgramResponse.prototype.setOkGetState = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.qni.api.ProgramResponse.oneofGroups_[0], value);
};


proto.qni.api.ProgramResponse.prototype.clearOkGetState = function() {
  this.setOkGetState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramResponse.prototype.hasOkGetState = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ErrorResponse ERR = 255;
 * @return {?proto.qni.api.ErrorResponse}
 */
proto.qni.api.ProgramResponse.prototype.getErr = function() {
  return /** @type{?proto.qni.api.ErrorResponse} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ErrorResponse, 255));
};


/** @param {?proto.qni.api.ErrorResponse|undefined} value */
proto.qni.api.ProgramResponse.prototype.setErr = function(value) {
  jspb.Message.setOneofWrapperField(this, 255, proto.qni.api.ProgramResponse.oneofGroups_[0], value);
};


proto.qni.api.ProgramResponse.prototype.clearErr = function() {
  this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 255) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.qni.api.ProgramMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.qni.api.ProgramMessage.oneofGroups_);
};
goog.inherits(proto.qni.api.ProgramMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.qni.api.ProgramMessage.displayName = 'proto.qni.api.ProgramMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.qni.api.ProgramMessage.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.qni.api.ProgramMessage.DataCase = {
  DATA_NOT_SET: 0,
  REQ: 10,
  RES: 11
};

/**
 * @return {proto.qni.api.ProgramMessage.DataCase}
 */
proto.qni.api.ProgramMessage.prototype.getDataCase = function() {
  return /** @type {proto.qni.api.ProgramMessage.DataCase} */(jspb.Message.computeOneofCase(this, proto.qni.api.ProgramMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.qni.api.ProgramMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.qni.api.ProgramMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.qni.api.ProgramMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    req: (f = msg.getReq()) && proto.qni.api.ProgramRequest.toObject(includeInstance, f),
    res: (f = msg.getRes()) && proto.qni.api.ProgramResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.qni.api.ProgramMessage}
 */
proto.qni.api.ProgramMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.qni.api.ProgramMessage;
  return proto.qni.api.ProgramMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.qni.api.ProgramMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.qni.api.ProgramMessage}
 */
proto.qni.api.ProgramMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new proto.qni.api.ProgramRequest;
      reader.readMessage(value,proto.qni.api.ProgramRequest.deserializeBinaryFromReader);
      msg.setReq(value);
      break;
    case 11:
      var value = new proto.qni.api.ProgramResponse;
      reader.readMessage(value,proto.qni.api.ProgramResponse.deserializeBinaryFromReader);
      msg.setRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.qni.api.ProgramMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.qni.api.ProgramMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.qni.api.ProgramMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.qni.api.ProgramMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReq();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.qni.api.ProgramRequest.serializeBinaryToWriter
    );
  }
  f = message.getRes();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.qni.api.ProgramResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProgramRequest REQ = 10;
 * @return {?proto.qni.api.ProgramRequest}
 */
proto.qni.api.ProgramMessage.prototype.getReq = function() {
  return /** @type{?proto.qni.api.ProgramRequest} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ProgramRequest, 10));
};


/** @param {?proto.qni.api.ProgramRequest|undefined} value */
proto.qni.api.ProgramMessage.prototype.setReq = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.qni.api.ProgramMessage.oneofGroups_[0], value);
};


proto.qni.api.ProgramMessage.prototype.clearReq = function() {
  this.setReq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramMessage.prototype.hasReq = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ProgramResponse RES = 11;
 * @return {?proto.qni.api.ProgramResponse}
 */
proto.qni.api.ProgramMessage.prototype.getRes = function() {
  return /** @type{?proto.qni.api.ProgramResponse} */ (
    jspb.Message.getWrapperField(this, proto.qni.api.ProgramResponse, 11));
};


/** @param {?proto.qni.api.ProgramResponse|undefined} value */
proto.qni.api.ProgramMessage.prototype.setRes = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.qni.api.ProgramMessage.oneofGroups_[0], value);
};


proto.qni.api.ProgramMessage.prototype.clearRes = function() {
  this.setRes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.qni.api.ProgramMessage.prototype.hasRes = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * @enum {number}
 */
proto.qni.api.FontStyle = {
  REGULAR: 0,
  ITALIC: 1,
  BOLD: 2,
  UNDERLINE: 4
};

/**
 * @enum {number}
 */
proto.qni.api.TextAlign = {
  LEFT: 0,
  RIGHT: 1,
  CENTER: 2
};

goog.object.extend(exports, proto.qni.api);
